unit URegraCRUDCidade;

interface

uses
    URegraCRUD
  , UEntidade
  , URepositorioCidade
  , UCIDADE
  ;

type
  TRegraCRUDCidade = class(TRegraCRUD)
  private
    FRepositorioCidade: TRepositorioCidade;

    procedure ValidaNome(const csNome: String);
    procedure ValidaCidade(const coCIDADE: TCIDADE);

  public
    constructor Create; override;

    procedure ValidaInsercao(const coENTIDADE: TENTIDADE); override;
    procedure ValidaAtualizacao(const coENTIDADE: TENTIDADE); override;
  end;

implementation

uses
    SysUtils
  , URepositorioDB
  , UMensagens
  ;

{ TRegraCRUDCidade }

constructor TRegraCRUDCidade.Create;
begin
  Inherited;
  FRepositorioDB := TRepositorioDB<TENTIDADE>(TRepositorioCidade.Create);
end;

procedure TRegraCRUDCidade.Insere(const coENTIDADE: TENTIDADE);
begin
  ValidaCidade(TCIDADE(coENTIDADE));
  FRepositorioCidade.Insere(TCIDADE(coENTIDADE));
end;

procedure TRegraCRUDCidade.ValidaCidade(const coCIDADE: TCIDADE);
begin
  ValidaNome(coCIDADE.NOME);
end;

procedure TRegraCRUDCidade.ValidaNome(const csNome: String);
begin
  if Trim(csNome) = EmptyStr then
    raise Exception.Create(STR_NOME_CIDADE_OBRIGATORIO);
end;

end.
