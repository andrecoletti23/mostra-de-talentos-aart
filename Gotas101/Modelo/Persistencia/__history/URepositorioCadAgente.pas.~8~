unit URepositorioCadAgente;

interface

uses
    UCadAgente
  , UEntidade
  , URepositorioDB
  , SqlExpr
  ;

type
  TRepositorioCadAgente = class(TRepositorioDB<TCAD_AGENTE>)
  private

  public
    constructor Create;
    destructor Destroy; override;

    procedure AtribuiDBParaEntidade(const coCADAGENTE: TCAD_AGENTE); override;
    procedure AtribuiEntidadeParaDB(const coCADAGENTE: TCAD_AGENTE;
                                    const coSQLQuery: TSQLQuery); override;
  end;


implementation

uses
    UDM
  , SysUtils
  , StrUtils
  ;

{ TRepositorioCadPessoa }



constructor TRepositorioCADAGENTE.Create;
begin
  Inherited Create(TCAD_AGENTE, TBL_CAD_AGENTE, FLD_ENTIDADE_ID, STR_CADAGENTE);
end;

destructor TRepositorioCadAgente.Destroy;
begin

  inherited;
end;

procedure TRepositorioCadAgente.AtribuiDBParaEntidade(
  const coCADAGENTE: TCAD_AGENTE);
begin
  inherited;
    with dmProway.SQLSelect do
    begin
      coCADAGENTE.AGENTE_ID      := FieldByName(FDL_AGENTE_ID).AsInteger;
      coCADAGENTE.AGENTE_NOME    := FieldByName(FDL_AGENTE_NOME).AsString;
      coCADAGENTE.AGENTE_LOGIN   := FieldByName(FDL_AGENTE_LOGIN).AsString;
      coCADAGENTE.AGENTE_SENHA   := FieldByName(FDL_AGENTE_SENHA).AsString;
      coCADAGENTE.AGENTE_EMAIL   := FieldByName(FDL_AGENTE_EMAIL).AsString;
  end;
end;

procedure TRepositorioCadAgente.AtribuiEntidadeParaDB(
  const coCADAGENTE: TCAD_AGENTE; const coSQLQuery: TSQLQuery);
begin
  inherited;
  with coSQLQuery do
    {ParamByName(FDL_AGENTE_ID).AsInteger    := coCADAGENTE.AGENTE_ID ;
    ParamByName(FDL_AGENTE_NOME).AsString   := coCADAGENTE.AGENTE_NOME;
    ParamByName(FDL_AGENTE_LOGIN).AsString  := coCADAGENTE.AGENTE_LOGIN ;
    ParamByName(FDL_AGENTE_SENHA).AsString  := coCADAGENTE.AGENTE_SENHA;
    ParamByName(FDL_AGENTE_EMAIL).AsString  := coCADAGENTE.AGENTE_EMAIL ; }
end;

end.
